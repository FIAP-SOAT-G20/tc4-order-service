// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/port/staff_gateway_port.go
//
// Generated by this command:
//
//	mockgen -source=internal/core/port/staff_gateway_port.go -destination=internal/core/port/mocks/staff_gateway_mock.go
//

// Package mock_port is a generated GoMock package.
package mock_port

import (
	context "context"
	reflect "reflect"

	entity "github.com/FIAP-SOAT-G20/fiap-tech-challenge-3-api/internal/core/domain/entity"
	valueobject "github.com/FIAP-SOAT-G20/fiap-tech-challenge-3-api/internal/core/domain/value_object"
	gomock "go.uber.org/mock/gomock"
)

// MockStaffGateway is a mock of StaffGateway interface.
type MockStaffGateway struct {
	ctrl     *gomock.Controller
	recorder *MockStaffGatewayMockRecorder
	isgomock struct{}
}

// MockStaffGatewayMockRecorder is the mock recorder for MockStaffGateway.
type MockStaffGatewayMockRecorder struct {
	mock *MockStaffGateway
}

// NewMockStaffGateway creates a new mock instance.
func NewMockStaffGateway(ctrl *gomock.Controller) *MockStaffGateway {
	mock := &MockStaffGateway{ctrl: ctrl}
	mock.recorder = &MockStaffGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStaffGateway) EXPECT() *MockStaffGatewayMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockStaffGateway) Create(ctx context.Context, staff *entity.Staff) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, staff)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockStaffGatewayMockRecorder) Create(ctx, staff any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockStaffGateway)(nil).Create), ctx, staff)
}

// Delete mocks base method.
func (m *MockStaffGateway) Delete(ctx context.Context, id uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockStaffGatewayMockRecorder) Delete(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockStaffGateway)(nil).Delete), ctx, id)
}

// FindAll mocks base method.
func (m *MockStaffGateway) FindAll(ctx context.Context, name string, role valueobject.StaffRole, page, limit int) ([]*entity.Staff, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll", ctx, name, role, page, limit)
	ret0, _ := ret[0].([]*entity.Staff)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// FindAll indicates an expected call of FindAll.
func (mr *MockStaffGatewayMockRecorder) FindAll(ctx, name, role, page, limit any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockStaffGateway)(nil).FindAll), ctx, name, role, page, limit)
}

// FindByID mocks base method.
func (m *MockStaffGateway) FindByID(ctx context.Context, id uint64) (*entity.Staff, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByID", ctx, id)
	ret0, _ := ret[0].(*entity.Staff)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByID indicates an expected call of FindByID.
func (mr *MockStaffGatewayMockRecorder) FindByID(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockStaffGateway)(nil).FindByID), ctx, id)
}

// Update mocks base method.
func (m *MockStaffGateway) Update(ctx context.Context, staff *entity.Staff) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, staff)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockStaffGatewayMockRecorder) Update(ctx, staff any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockStaffGateway)(nil).Update), ctx, staff)
}
